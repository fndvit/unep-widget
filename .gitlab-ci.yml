image: node:12.16.2-alpine3.11

stages:
  - build
  - deploy
  - flushcache

variables:
  STAGING_BUCKET_NAME: ${STAGING_BUCKET_NAME}
  PROD_BUCKET_NAME: ${PROD_BUCKET_NAME}
  CF_ZONE_ID: ${CF_ZONE_ID}
  CF_API_TOKEN: ${CF_API_TOKEN}

cache:
  paths:
    - node_modules

build_svelte:
  stage: build
  artifacts:
    untracked: true
  tags:
    - unep
  script:
    - npm i
    - npm run build
  only:
    - main
    - staging

deploy_to_staging:
  tags:
    - unep
  image:
    name: robpco/awscli
    entrypoint:
      - '/usr/bin/env'
      - 'PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'
  stage: deploy
  only:
    - staging
  dependencies:
    - build_svelte
  script:
    - aws s3 sync public/ s3://${STAGING_BUCKET_NAME} --acl public-read

deploy_to_prod:
  tags:
    - unep
  image:
    name: robpco/awscli
    entrypoint:
      - '/usr/bin/env'
      - 'PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'
  stage: deploy
  only:
    - main
  dependencies:
    - build_svelte
  script:
    - aws s3 sync public/ s3://${PROD_BUCKET_NAME} --acl public-read

flushcache:
  image: docker:stable
  only:
   - main
  tags:
    - unep
  stage: flushcache
  dependencies:
    - deploy_to_prod
  before_script:
    - apk add --update curl && rm -rf /var/cache/apk/*
  script:
    - |
      curl -X POST "https://api.cloudflare.com/client/v4/zones/${CF_ZONE_ID}/purge_cache" -H "Authorization: Bearer Bearer ${CF_API_TOKEN}" -H "Content-Type: application/json" --data '{"purge_everything":true}'
